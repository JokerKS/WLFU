@model JokerKS.WLFU.Models.RegisterModel
@{
    ViewBag.Title = "Register";
}

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />
        <div class="row">
            <div class="col-xs-8 col-sm-6 col-md-6 col-xs-offset-2 col-sm-offset-3 col-md-offset-3">
                <h2 style="text-align:center">Create account</h2>
                <hr class="colorline">
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, new { @class = "control-label" })
                    @Html.EditorFor(x => x.FirstName, new { htmlAttributes = new { @class = "form-control input-lg"} })
                    @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Lastname, new { @class = "control-label" })
                    @Html.EditorFor(x => x.Lastname, new { htmlAttributes = new { @class = "form-control input-lg"} })
                    @Html.ValidationMessageFor(x => x.Lastname, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDate, new { @class = "control-label" })
                    @Html.EditorFor(x => x.BirthDate, new { htmlAttributes = new { @class = "form-control input-lg" } })
                    @Html.ValidationMessageFor(x => x.BirthDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, new { @class = "control-label" })
                    @Html.EditorFor(x => x.UserName, new { htmlAttributes = new { @class = "form-control input-lg" } })
                    @Html.ValidationMessageFor(x => x.UserName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                    @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control input-lg" } })
                    @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, new { @class = "control-label" })
                    @Html.EditorFor(x => x.Password, new { htmlAttributes = new { @class = "form-control input-lg" } })
                    @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label" })
                    @Html.EditorFor(x => x.ConfirmPassword, new { htmlAttributes = new { @class = "form-control input-lg" } })
                    @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <hr class="colorline">
                <div class="form-group">
                    <p style="text-align:center">
                        <input class="btn btn-lg btn-success" type="submit" value="Register">
                    </p>
                </div>
            </div>
        </div>
    }
</div>